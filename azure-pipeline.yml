name: Deploy Bicep files $(Build.BuildId)

trigger: 
  - main

variables:
  resourceGroupName: 'testiSql'
  templateFile: 'main.bicep'
  parameterFile: 'main.bicepparam'
  buildConfiguration: 'Release'
  azureSubscription: 'Azure Sub'
  

pool:
  vmImage: 'windows-latest'

#Phases of the pipeline
stages:
- stage: preDeploy
  jobs:
  - job: scanWhatif
    displayName: scan and run whatif
    pool:
      vmImage: windows-2022

    steps:
    

    - task: UseBicep@0
      displayName: Scan Bicep files
      inputs:
        templatelocation: '$(System.DefaultWorkingDirectory)'
        resultLocation: '$(System.DefaultWorkingDirectory)\results'
        allTemplatesMain: false
        cliOutputResults: true
        ignoreExitCode: true
    
    - task: PublishTestResults@2
      displayName: Publish Results
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '$(System.DefaultWorkingDirectory)\results\*-armttk.xml'
      condition: always()

    - task: AzureCLI@2
      displayName: Preview Bicep Changes
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az --version
          az deployment group what-if --resource-group $(resourceGroupName) `
            --template-file $(templateFile) `
            --parameters $(parameterFile)

- stage: deployBicep
  jobs:

  - job: waitForValidation
    displayName: Wait for external validation
    pool: server
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: 'eezeali@gmail.com'
        instructions: 'Please validate the build $(Build.BuildId) configuration and resume'
        onTimeout: 'resume'

  - job: deployAzure
    displayName: deploy bicep to Azure
    pool:
      vmImage: 'windows-latest'
    dependsOn: [waitForValidation]
    steps:
    - task: AzureCLI@2
      displayName: Deploy Bicep To Azure
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create --resource-group $(resourceGroupName) `
            --template-file $(templateFile) `
            --parameters $(parameterFile)       


- stage: buildApplication
  dependsOn: deployBicep
  pool:
    vmImage: 'windows-latest'
  jobs:
    - job: Build_DotnetApp
      steps:
        # Build and publish the application library
        - task: DotNetCoreCLI@2
          displayName: 'dotnet restore'
          inputs:
            command: restore
            projects: '**/*.csproj'
        - task: DotNetCoreCLI@2
          displayName: 'dotnet build'
          inputs:
            command: build
            projects: '**/*.csproj'
            arguments: '--configuration $(buildConfiguration)'
        - task: DotNetCoreCLI@2
          displayName: 'dotnet publish'
          inputs:
            command: publish
            publishWebProjects: True
            arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: True
        # Publish the app as an artifact
        - publish: $(Build.ArtifactStagingDirectory)
          artifact: Brun_app
        
        - script: |
            cd $(Build.ArtifactStagingDirectory)
            tree /f

